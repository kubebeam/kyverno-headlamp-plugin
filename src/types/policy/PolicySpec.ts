/**
 *
 *
 *
 * The version of the OpenAPI document:
 * Contact Email:
 * License:
 *
 * NOTE: This file is auto generated by crdtotypes (https://github.com/yaacov/crdtoapi/).
 * https://github.com/yaacov/crdtoapi/README.crdtotypes
 */

/**
 * Spec defines policy behaviors and contains one or more rules.
 *
 * @export
 */
export interface PolicySpec {
  /** admission
   * Admission controls if rules are applied during admission.
Optional. Default value is "true".
   *
   * @required {false}
   * @required {true}
   */
  admission?: boolean;
  /** applyRules
   * ApplyRules controls how rules in a policy are applied. Rule are processed in
the order of declaration. When set to `One` processing stops after a rule has
been applied i.e. the rule matches and results in a pass, fail, or error. When
set to `All` all rules in the policy are processed. The default is `All`.
   *
   * @required {false}
   * @originalType {string}
   */
  applyRules?: 'All' | 'One';
  /** background
   * Background controls if rules are applied to existing resources during a background scan.
Optional. Default value is "true". The value must be set to "false" if the policy rule
uses variables that are only available in the admission review request (e.g. user name).
   *
   * @required {false}
   * @required {true}
   */
  background?: boolean;
  /** failurePolicy
   * FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled.
Rules within the same policy share the same failure behavior.
Allowed values are Ignore or Fail. Defaults to Fail.
   *
   * @required {false}
   * @originalType {string}
   */
  failurePolicy?: 'Ignore' | 'Fail';
  /** generateExisting
   * GenerateExisting controls whether to trigger generate rule in existing resources
If is set to "true" generate rule will be triggered and applied to existing matched resources.
Defaults to "false" if not specified.
   *
   * @required {false}
   */
  generateExisting?: boolean;
  /** generateExistingOnPolicyUpdate
   * Deprecated, use generateExisting instead
   *
   * @required {false}
   */
  generateExistingOnPolicyUpdate?: boolean;
  /** mutateExistingOnPolicyUpdate
   * MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events.
Default value is "false".
   *
   * @required {false}
   */
  mutateExistingOnPolicyUpdate?: boolean;
  /** rules
   * Rule defines a validation, mutation, or generation control for matching resources.
Each rules contains a match declaration to select resources, and an optional exclude
declaration to specify which resources to exclude.
   *
   * @required {false}
   */
  // NOT USED in HEADLAMP // rules?: PolicySpecRules[];
  /** schemaValidation
   * Deprecated.
   *
   * @required {false}
   */
  schemaValidation?: boolean;
  /** useServerSideApply
   * UseServerSideApply controls whether to use server-side apply for generate rules
If is set to "true" create & update for generate rules will use apply instead of create/update.
Defaults to "false" if not specified.
   *
   * @required {false}
   */
  useServerSideApply?: boolean;
  /** validationFailureAction
   * ValidationFailureAction defines if a validation policy rule violation should block
the admission review request (enforce), or allow (audit) the admission review request
and report an error in a policy report. Optional.
Allowed values are audit or enforce. The default value is "Audit".
   *
   * @required {false}
   * @required {Audit}
   * @originalType {string}
   */
  validationFailureAction?: 'audit' | 'enforce' | 'Audit' | 'Enforce';
}
